git绑定github账号
	git config --global user.name "用户名"
	git config --global user.email "邮箱"

git仓库管理命令
	git status 查看当前仓库的状态
	git diff 查看修改的内容
	git log 查看所有的提交日志 简易查看：加上指令 --pretty=oneline
	git reflog 查看命令日志
	git checkout --文件名 撤销操作

	版本回退
		git reset --hard HEAD^	（一个^回退到上个版本 两个^^回退到上上个版本 回退到上N个版本 HEAD~N)
		git reset --hard 版本号	回退到具体某个版本

本地仓库
	创建一个目录，用git Bash cd到该目录下（直接拖拽，git bash 是仿Linux命令）
	git init 将该目录设置为仓库
	添加文件到仓库 git add 文件名
	提交文件到仓库 git commit -m "注释信息"

远程仓库
	ssh-keygen -t rsa -C "邮箱"	创建一个 ssh 的公私钥 id_rsa 私钥 id_rsa.pub 公钥
	将公钥加载到GitHub或gitee上
	ssh -T git@github.com	连接GitHub
	git remote add origin 远程仓库的地址	关联远程仓库
	git remote rm oringin		删除远程仓库关联
	git pull origin master		获取远程仓库内容
	git push origin  master		将本地内容上传远程仓库
	git clone 远程仓库的地址		克隆远程仓库内容
	注意：添加文件名：.gitignore	将某些文件名写入该文件，在每次获取或上传远程仓库时，可忽略该文件（避免某些大文件每次上传下载）

合并冲突
	当两个分支或本地和远程仓库合并时，即：git merge 或 git pull 出现冲突时，对于文本文件的冲突仅需进入该文件将不需要保留的部分文件进行删除即可，对于二进制文件，可以使用 git checkout 文件名 --ours/theirs （ours保留本分支或本地仓库文件/theirs保留其他分支或远程仓库文件）进行选择型保留

分支管理
	git branch 分支名	创建分支（不加分支名为查看分支，确认自己目前所在分支）
	git checkout 分支名	切换分支（-b 创建分支并且换）
	git merge 分支名	合并分支（在主分支上合并，分支名为要被合并的分支）
	git push --set-upstream origin 分支名（第一次上传新分支）

标签管理
	git tag 标签名 [id]	（创建标签，不加标签名为查看标签，为指定 id 打标签）
	git tag -a 标签名 -m "标签信息"	（指定标签信息）
	git checkout 标签名		（切换到指定标签）
	git show 标签名	（查看标签的说明文字）
	git tag -d 标签名	（删除标签）
	git push origin 标签名	（推送标签到远程）
	git push origin --tags	（推送全部未推送过的标签到远程）

	删除远程标签
		先删除本地：git tag -d 标签名
		再删除远程：git push origin ：refs/tags/标签名